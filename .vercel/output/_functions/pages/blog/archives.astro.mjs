/* empty css                                   */import{a,r as e,b as s,m as t,f as r}from"../../chunks/astro/server_Cr3L-o0H.mjs";import{b as i,a as l}from"../../chunks/BaseLayout_CQzFYZn-.mjs";import{$ as c}from"../../chunks/BaseCard_AsOMSzg9.mjs";import{g as o}from"../../chunks/_astro_content_Cp5fOLG1.mjs";import{t as n,D as d}from"../../chunks/config_BS5eD5l5.mjs";import m from"dayjs";export{renderers}from"../../renderers.mjs";const p=a((async(a,p,h)=>{const v=(await o("blog")).filter((a=>!a.data.draft));v.sort(((a,e)=>new Date(e.data.pubDate).getTime()-new Date(a.data.pubDate).getTime()));const b=new Map;v.forEach((a=>{const e=new Date(a.data.pubDate),s=e.getFullYear().toString(),t=(e.getMonth()+1).toString().padStart(2,"0");b.has(s)||b.set(s,new Map);const r=b.get(s);r.has(t)||r.set(t,[]),r.get(t).push(a)}));const g=Array.from(b.keys()).sort(((a,e)=>parseInt(e)-parseInt(a))),u=v.length;return s`${e(a,"BaseLayout",i,{title:n("label.archivePage")},{default:async a=>s` ${e(a,"BaseCard",c,{title:n("label.archivePage")},{default:async a=>s` ${t()}<div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4"> <div class="flex items-center gap-2"> ${e(a,"Icon",l,{name:"lucide:archive",class:"w-6 h-6 text-accent"})} <h1 id="h1" class="text-2xl md:text-3xl font-bold">${n("label.archivePage")}</h1> <div class="badge badge-accent">${u} ${n(1===u?"label.post":"label.posts")}</div> </div> <a href="/blog" class="btn btn-outline btn-sm gap-2"> ${e(a,"Icon",l,{name:"lucide:book-open",class:"w-4 h-4"})} <span>${n("label.backToBlog")}</span> </a> </div> <div class="divider my-2"></div> <p class="text-sm opacity-75">${n("label.archivesPageDescription")}</p> `})} ${e(a,"BaseCard",c,{title:n("label.archivePage")},{default:async a=>s` <div class="archives-container"> ${g.length>0?s`<div class="archives-timeline"> ${g.map((t=>s`<div class="timeline-year"> <div class="year-header"> <div class="year-badge">${t}</div> </div> <div class="year-content"> ${Array.from(b.get(t).entries()).sort(((a,e)=>parseInt(e[0])-parseInt(a[0]))).map((([i,c])=>s`<div class="timeline-month"> <h3 class="month-title"> ${e(a,"Icon",l,{name:"lucide:calendar",class:"month-icon"})} <span> ${(a=>["January","February","March","April","May","June","July","August","September","October","November","December"][parseInt(a)-1])(i)} ${t} </span> <span class="month-count">${c.length}</span> </h3> <ul class="archive-posts"> ${c.map((a=>s`<li class="archive-item"> <a${r(`/blog/${a.slug}`,"href")} class="archive-card"> <time class="archive-date">${m(a.data.pubDate).format(d)}</time> <h4 class="archive-title">${a.data.title}</h4> ${a.data.description&&s`<p class="archive-description">${a.data.description}</p>`} </a> </li>`))} </ul> </div>`))} </div> </div>`))} </div>`:s`<div class="empty-state"> ${e(a,"Icon",l,{name:"ri:emotion-sad-line",class:"empty-icon"})} <p class="empty-text">${n("label.noPosts")}</p> </div>`} </div> `})} `})}`}),"D:/我滴作业/blog/Frosti/src/pages/blog/archives.astro",void 0),h=Object.freeze(Object.defineProperty({__proto__:null,default:p,file:"D:/我滴作业/blog/Frosti/src/pages/blog/archives.astro",url:"/blog/archives"},Symbol.toStringTag,{value:"Module"})),v=()=>h;export{v as page};
